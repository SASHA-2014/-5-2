class NameSurname:
    def __init__ (self, name, surname):
        self.name = name
        self.surname = surname

class Student:
    student_amount = 0
    def __init__ (self,name, surname , age, height, nameschool, town, GPA ):
        if (type(name) != str ):
            raise TypeError("Имя написано цифрами")
        if (type(surname) != str ):
            raise TypeError("Фамилия написано цифрами")
        self.ns = NameSurname(name, surname)
        assert isinstance(age, int)
        self.age = age
        self.height = height
        self.nameschool = nameschool
        self.town = town
        self.GPA = GPA
        Student.student_amount += 1

    def printStudent(self):
        print(f'Name: {self.ns.name}')
        print(f'Surname: {self.ns.surname}')
        if self.age <=0:
            print("возраст не может быть меньше нуля")
        else: print(f'Age: {self.age}')
        print(f'Height: {self.height}')
        if self.nameschool is None: print('False')
        else: print(f'nameschool: {self.nameschool}')
        print(f'town: {self.town}')
        if self.GPA == 12:
            print('GPA = Perfectly')
        elif self.GPA >= 10:
            print('GPA = Good')
        elif self.GPA >= 7:
            print('GPA = Ok')
        elif self.GPA >= 4:
            print('GPA = Bad')
        elif self.GPA >= 1:
            print('GPA = Very bad')

    def Birthday(self):
        self.age += 1
        if self.age <=0:
            print("ERROR AGE")
        else: print(f'Happy Birthday to {self.ns.name}. Now you {self.age}!')



try:
     print(f'before creating Student object {Student.student_amount}')
     first_student = Student("sasha", "dzekish", 10,160,  "Veda", "Odessa", 12)
     first_student.printStudent()
     print(f'after creating Student object {Student.student_amount}')
     first_student.Birthday()
except AssertionError:
    print ("Возраст нужно писать цифрамы")
